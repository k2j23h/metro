syntax = "proto3";

package metro;

service Metro {
    rpc Start (StartRequest) returns (Status) {};
    rpc Link (LinkRequest) returns (Status) {};
    rpc Transmit (TransmitRequest) returns (Status) {};
    rpc Listen (Token) returns (stream Signal) {};
}

message Station {
    // flow id
    string id = 1;
    string name = 2;
    string image = 3;
}

message Token {
    // container id
    string id = 1;
}

message Status {
    int32 code = 1;
}

message StartRequest {
    // required(image)
    Station station = 2;
    string userID = 3;
}

message LinkRequest {
    Token token = 1;
    // required(id, name)
    Station src = 2;
    // required(name, image)
    Station dst = 3;
}

message TransmitRequest {
    Token token = 1;
    // required(id, name)
    Station src = 2;
    // required(name, image)
    Station dst = 3;        
    string message = 4;
}

// required                 src dst msg
// for control=START,        n   y   n
// for control=FORWARDED,    y   y   n
// for control=MESSAGE       y   y   o
message Signal {
    // required(id, name, image)
    Station src = 2;
    // required(id, name, image)
    Station dst = 3;
    string message = 4;
    enum Control {
        NOT_USED = 0;
        START = 1;
        TERMINATE = 2;
        FORWARDED = 3;
        MESSAGE = 4;
        BLOCKED = 5;
    }
    Control control = 5;
}